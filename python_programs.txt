1)""" factorial of a number """
n=int(input("Enter a number: "))
fact=1
if n==0 and n==1:
    print("1")
for i in range(2,n+1):
    fact=fact*i
print(fact) 


#factoraials between 1 to 5
def fact_num(n):
    if n==0 or n==1:
        return 1
    else:
        fact=1
        for i in range(2,n+1):
            
            fact=fact*i
        return fact   
def fact_range(start,end):
    lst=[]
    for i in range(start,end+1):
        temp=fact_num(i)
        lst.append(str(temp))
    return " ".join(lst)    
        
    
result=fact_range(1,5)
print(result)
----------------------------------------------
""" factors of a number """
n=int(input("Enter a number: "))
for i in range(1,n+1):
    if n%i==0:
        print(i)
----------------------------------------------

2) """ prime number """

n=int(input("Enter number : "))
count=0
for i in range(1,n+1):
    if n%i==0:
        count=count+1
if count==2:
    print("Prime")
else:
    print("Not prime")


#prime numbers between 3-10
def p_num(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    if count == 2:
        return n
    return None

def p_range(start, end):
    primes = []
    for i in range(start, end + 1):
        prime = p_num(i)
        if prime is not None:
            primes.append(str(prime))  # Convert prime number to string
    return " ".join(primes)

# Define the range
start = 3
end = 10

# Get the prime numbers in the specified range
result = p_range(start, end)

# Print the result
print(result)
------------------------------------------------
""" perfect number
6=1+2+3 """
n=int(input("Enter a number: "))
sum=0
temp=n
for i in range(1,n):
    if n%i==0:
        sum=sum+i
if temp==sum:
    print("perfect")
else:
    print("not perfect")
---------------------------------------------------

3) def fib(n):
    lst = [0, 1]  # Initialize the list with the first two Fibonacci numbers
    for i in range(2, n + 1):  # Start the loop from 2 up to and including n
        lst.append(lst[-1] + lst[-2])  # Add the sum of the last two elements to the list
    return lst  # Return the list containing the Fibonacci sequence

result = fib(6)  
print(result)  



4) fibbonacci of nth element
n=int(input("Enter: "))
a=0
b=1
for i in range(n):
    a,b=b,a+b
print(a)
        
     (or)

def nth_fib(n):
    a,b=0,1
    for i in range(n):
        a,b=b,a+b
    return a
result=nth_fib(6)   
print(result)



5) ''' sum of 1st 5 fibbonacci elements  0 1 1 2 3 5 8'''
def sum_fib(n):
    a=0
    b=1
    lst=[0,1]
    for i in range(2,n+1):
       result=lst[-1]+lst[-2]
       lst.append(result)
    return lst
output=sum_fib(5)
print(sum(output))
--------------------------------------------------------------
""" Armstrong number """
n=int(input("Enter a number: "))
temp=n
sum=0
while n>0:
    r=n%10
    n=n//10
    sum=sum+r*r*r
if temp==sum:
    print("armstrong")
else:
    print("not armstrong")
---------------------------------------------------------------
""" palindrome number """
n=int(input("Enter a number: "))
sum=0
temp=n
while n>0:
    r=n%10
    n=n//10
    sum=sum*10+r
if temp==sum:
    print("Palindrome")
else:
    print("Not Palindrome")
----------------------------------------------------------------------

Patterns

str="SASI"
for i in range(1,len(str)+1):
    print(str[:i])


name="PAVITHRA"
x=""
for i in name:
    x=x+i
    print(x)

-----------------------------------------
n=5
for i in range(1,n+1):
    for j in range(1,i+1):
        print("*",end="")
    print()   
------------------------------------------

n=5
for i in range(n,0,-1):     //range(start, stop, step)
    for j in range(i):
        print("*",end=" ")
    print()
----------------------------------------------

n=5
for i in range(1,n+1):
    for j in range(n,i,-1):
        print("-",end="")
    for k in range(1,i+1):
        print("*",end="")
    print()    
-------------------------------------------------
//pyramid
n=5
for i in range(1,n+1):
    for j in range(n,i,-1):
        print(" ",end="")
    for k in range(1,i+1):
        print("*",end=" ")
    print() 
------------------------------------------------
n=5
for i in range(n,0,-1):
    for j in range(n+1,i,-1):
        print(" ",end="")
    for k in range(1,i+1):
        print("*",end="")
    print()    
--------------------------------------------------
//inverted square pyramid
n=5
for i in range(n,0,-1):
    for j in range(n+1,i,-1):
        print(" ",end="")             
    for k in range(1,i+1):
        print("*",end=" ")
    print()             



